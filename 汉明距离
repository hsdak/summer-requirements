两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。

给出两个整数 x 和 y，计算它们之间的汉明距离。

注意：
0 ≤ x, y < 231.

示例:

输入: x = 1, y = 4

输出: 2

解释:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

上面的箭头指出了对应二进制位不同的位置。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/hamming-distance
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
思路：两数进行位异或运算，得到的十进制数结果的二进制数，每有一个1，就表面原来两数有一位相同。用移位的方式将这些1从最低位开始累加。
c++ code:
int hammingDistance(int x, int y) {
        int z,count=0;
        z=x^y;
        while(z){
            count+=z-((z>>1)<<1);
            z=z>>1;
        }
        return count;
    }
执行结果：
通过
显示详情

执行用时：
0 ms
, 在所有 C++ 提交中击败了
100.00%
的用户
内存消耗：
5.9 MB
, 在所有 C++ 提交中击败了
66.96%
的用户
